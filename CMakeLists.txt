# GameBoy Advance

# ############################ CMake Setup ####################################

CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

PROJECT(GBA VERSION 2.0.0)

SET(GBA_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
SET(GBA_VERSION_MINOR ${PROJECT_VERSION_MINOR})
SET(GBA_VERSION_PATCH ${PROJECT_VERSION_PATCH})
SET(GBA_VERSION ${GBA_VERSION_MAJOR}.${GBA_VERSION_MINOR}.${GBA_VERSION_PATCH})

SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_C_STANDARD 99)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules")

INCLUDE(PrecompiledHeader)

# ################################## Options ##################################

# ############################## Compiler Setup ###############################

ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

ADD_COMPILE_OPTIONS(
  $<$<CONFIG:>:/MT>
  $<$<CONFIG:Debug>:/MTd>
  $<$<CONFIG:Release>:/MT>
)
ADD_COMPILE_OPTIONS(/MP /bigobj)
ADD_COMPILE_OPTIONS(/wd4244) # Warn about converting from types with possible loss of data

SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /DDEBUG /Zi /Od")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG:FULL /PDBALTPATH:%_PDB% /OPT:REF /OPT:ICF")

# ############################# Directory Setup ###############################

IF(NOT DEFINED CMAKE_RUNTIME_OUTPUT_DIRECTORY)
  SET(GBA_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/" CACHE STRING "Path for runtime output files")
  SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${GBA_RUNTIME_OUTPUT_DIRECTORY})
ELSE()
  SET(GBA_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/" CACHE STRING "Path for runtime output files")
ENDIF()

IF(NOT DEFINED CMAKE_LIBRARY_OUTPUT_DIRECTORY)
  SET(GBA_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/" CACHE STRING "Path for library output files")
  SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${GBA_LIBRARY_OUTPUT_DIRECTORY})
ELSE()
  SET(GBA_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/" CACHE STRING "Path for library output files")
ENDIF()

IF(NOT DEFINED CMAKE_ARCHIVE_OUTPUT_DIRECTORY)
  SET(GBA_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/" CACHE STRING "Path for archive output files")
  SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${GBA_ARCHIVE_OUTPUT_DIRECTORY})
ELSE()
  SET(GBA_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/" CACHE STRING "Path for archive output files")
ENDIF()

MACRO(TARGET_USE_COMMON_OUTPUT_DIRECTORY target)
  SET_TARGET_PROPERTIES(${target} PROPERTIES
      RUNTIME_OUTPUT_DIRECTORY ${GBA_RUNTIME_OUTPUT_DIRECTORY}
	  LIBRARY_OUTPUT_DIRECTORY ${GBA_LIBRARY_OUTPUT_DIRECTORY}
      ARCHIVE_OUTPUT_DIRECTORY ${GBA_ARCHIVE_OUTPUT_DIRECTORY}
  )
ENDMACRO()

IF (NOT TARGET uninstall)
  CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake-modules/cmake_uninstall.cmake.in" "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake" IMMEDIATE @ONLY)
  ADD_CUSTOM_TARGET(uninstall "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
ENDIF()

SET(GENERATED_DIR "${CMAKE_CURRENT_BINARY_DIR}/generated")

IF(MSVC_TOOLSET_VERSION)
  SET(MSVC_PREFIX "vc${MSVC_TOOLSET_VERSION}")
  SET(GBA_MSVC_VERSION ${MSVC_PREFIX})
ELSE()
  IF(MSVC12)
    SET(GBA_MSVC_VERSION "vc120")
  ELSEIF(MSVC14)
    SET(GBA_MSVC_VERSION "vc140")
  ELSEIF(MSVC15)
    SET(GBA_MSVC_VERSION "vc141")
  ELSEIF(MSV142)
    SET(GBA_MSVC_VERSION "vc142")
  ELSEIF(MSVC143)
    SET(GBA_MSVC_VERSION "vc143")
  ENDIF()
ENDIF()

SET(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})

SET(THIRD_PARTY_DIR ${ROOT_DIR}/third_party)

SET(INTERFACE_DIR ${ROOT_DIR}/interface)
SET(INTERFACE_HEADER_DIR ${INTERFACE_DIR}/include)

SET(EMULATOR_DIR ${ROOT_DIR}/emulator)
SET(EMULATOR_HEADER_DIR ${EMULATOR_DIR}/include)

SET(COMMON_DIR ${ROOT_DIR}/common)
SET(COMMON_HEADER_DIR ${COMMON_DIR}/include)

SET(CONFIGURATION_BINARY_DIR ${GBA_RUNTIME_OUTPUT_DIRECTORY}/$<$<CONFIG:Debug>:Debug>$<$<CONFIG:Release>:Release>)

# ############################## Project Setup ################################

# ADD_SUBDIRECTORY(third_party)
ADD_SUBDIRECTORY(common)
ADD_SUBDIRECTORY(emulator)
ADD_SUBDIRECTORY(interface)

SET_PROPERTY(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT Interface)
SET_PROPERTY(TARGET Interface PROPERTY VS_DEBUGGER_WORKING_DIRECTORY ${CONFIGURATION_BINARY_DIR})
